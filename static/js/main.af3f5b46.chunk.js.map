{"version":3,"sources":["images/chess_queen.svg","App.tsx","index.tsx"],"names":["App","useState","queensLeft","setQueensLeft","boardState","setBoardState","queenList","setQueenList","getCoordinates","id","n","Number","Math","floor","getState","board","row","col","updateBoardUI","action","pos","document","getElementById","innerHTML","queen","updateQueenList","newQueenList","push","index","indexOf","splice","updateBoardState","tempBoard","forEach","i","colAttack","rowAttack","row_lu","col_lu","row_ld","col_ld","row_ru","col_ru","row_rd","col_rd","diagAttack","play","state","newBoard","adicionaPeça","removePeça","alert","newGame","x","cl","String","style","backgroundColor","solve","currentQueenList","currentQueensLeft","emptyPositions","getEmptyPositions","length","pop","newQueensLeft","result","className","onClick","a","j","red","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.af3f5b46.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/chess_queen.6603a7d6.svg\";","import React, { Fragment } from 'react';\r\nimport { useState } from 'react';\r\n\r\n\r\nimport './App.css';\r\nimport queen from './images/chess_queen.svg'\r\n\r\nfunction App() {\r\n\tconst [queensLeft, setQueensLeft] = useState<number>(8);\r\n\tconst [boardState, setBoardState] = useState<number[][]>(\r\n    [[0,0,0,0,0,0,0,0],\r\n     [0,0,0,0,0,0,0,0],\r\n     [0,0,0,0,0,0,0,0],\r\n     [0,0,0,0,0,0,0,0],\r\n     [0,0,0,0,0,0,0,0],\r\n     [0,0,0,0,0,0,0,0],\r\n     [0,0,0,0,0,0,0,0],\r\n     [0,0,0,0,0,0,0,0]]\r\n  );\r\n\tconst [queenList, setQueenList] = useState<string[]>([]);\r\n\t\r\n\r\n\tfunction getCoordinates(id: string){\r\n\t\t// Retorna as coordenadas da matriz, que representam a posição selecionada no\r\n\t\t// tabuleiro.\r\n\r\n\t\t/*\r\n\t\t\tOs ids variam de 1 à 64, logo, representam os 64 quadrados do tabuleiro.\r\n\t\t\t\r\n\t\t\tPara encontrar a linha que um id representa basta pegar o resto da divisão\r\n\t\t\tdo id por 8, resultando em um valor entre 0 e 7.\r\n\r\n\t\t\tPara encontrar a Coluna, basta dividir o valor do id por 8 e subtrair 1\r\n\t\t\tdesse resultado. Resultando em um valor entre 0 e 7.\r\n\t\t*/\r\n\t\tconst n = Number(id);\r\n  \tconst row = Math.floor((n-1)/8);\r\n  \tconst col = (n-1)%8;\r\n\r\n\t\treturn [row, col];\r\n\t}\r\n\r\n\tfunction getState(id: string, board: number[][]){\r\n\t\t/*\r\n\t\t\tFunção Retorna o Estado atual de uma posição do tabuleiro.\r\n\r\n\t\t\tPossíveis Estados:\r\n\t\t\t\t0: Posição Vazia\r\n\t\t\t\t1: Posição Ocupada por uma rainha\r\n\t\t\t\t2: Posição está sob ataque de alguma rainha\r\n\t\t*/\r\n\t\t\r\n\t\tconst [row, col] = getCoordinates(id);\r\n\r\n\t\tconst state = board[row][col];\r\n\r\n\t\treturn state;\r\n\t}\r\n\r\n\tfunction updateBoardUI(id: string, action: string){\r\n\t\t/*\r\n\t\t\tA função atualiza a interface do tabuleiro, adicionando/removendo uma rainha.\r\n\t\t*/\r\n\t\t\r\n\t\t// Seleciona o Elemento HTML responsável por aquela posição\r\n\t\tlet pos = document.getElementById(id);\r\n\r\n\t\t// Adiciona/Remove a rainha daquela posição\r\n\t\tif(action === 'add' && pos!.innerHTML !== '<img src='+queen+' alt=\"Queen\"/>'){\r\n\t\t\tpos!.innerHTML = '<img src='+queen+' alt=\"Queen\"/>'\r\n\t\t}\r\n\t\telse if(action === 'remove'){\r\n\t\t\tpos!.innerHTML = '';\r\n\t\t}\r\n\t}\r\n\r\n\tfunction updateQueenList(id: string, action: string, queenList: string[]){\r\n\t\t/*\r\n\t\t\tEssa função controla as posições de cada rainha do tabuleiro.\r\n\r\n\t\t\tEsse controle é importante, pois é com ele que se atualiza a matriz do tabuleiro,\r\n\t\t\tpermitindo determinar quais são as posições válidas para adicionar um nova rainha\r\n\t\t\t(posição deve estar vazia, e não estar sob ataque de outra rainha).\r\n\t\t*/\r\n\r\n\t\tlet newQueenList = queenList;\r\n\r\n\t\tif(action === 'add'){\r\n\t\t\tnewQueenList.push(id);\r\n\t\t\t//setQueenList(temp);\r\n\t\t}\r\n\t\telse if(action === 'remove'){\r\n\t\t\tconst index = newQueenList.indexOf(id);\r\n\t\t\tnewQueenList.splice(index, 1);\r\n\t\t\t//setQueenList(temp);\r\n\t\t}\r\n\r\n\t\treturn newQueenList;\r\n\t}\r\n\r\n\tfunction newBoard(){\r\n\t\t/*\r\n\t\t\tretorna um novo tabuleiro.\r\n\t\t*/\r\n\r\n\t\treturn [[0,0,0,0,0,0,0,0],\r\n     [0,0,0,0,0,0,0,0],\r\n     [0,0,0,0,0,0,0,0],\r\n     [0,0,0,0,0,0,0,0],\r\n     [0,0,0,0,0,0,0,0],\r\n     [0,0,0,0,0,0,0,0],\r\n     [0,0,0,0,0,0,0,0],\r\n     [0,0,0,0,0,0,0,0]];\r\n\t}\r\n\r\n\tfunction rowAttack(row: number, col: number, tempBoard: number[][]){\r\n\t\t/*\r\n\t\t\tDada a posição de uma peça, percorre a linha onde aquela peça está, alterando o\r\n\t\t\testado das posições que estão vazias para sob ataque.\r\n\t\t*/\r\n\r\n\t\tfor(let i = 0; i <= 7; i++){\r\n\t\t\tif(tempBoard[row][i] === 0)\r\n\t\t\t\ttempBoard[row][i] = 2;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction colAttack(row: number, col: number, tempBoard: number[][]){\r\n\t\t/*\r\n\t\t\tDada a posição de uma peça, percorre a coluna onde aquela peça está, alterando o\r\n\t\t\testado das posições que estão vazias para sob ataque.\r\n\t\t*/\r\n\r\n\t\tfor(let i = 0; i <= 7; i++){\r\n\t\t\tif(tempBoard[i][col] === 0){\r\n\t\t\t\ttempBoard[i][col] = 2;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction diagAttack(row: number, col: number, tempBoard: number[][]){\r\n\t\t/*\r\n\t\t\tlu: left-up\r\n\t\t\tld: left-down\r\n\t\t\tru: right-up\r\n\t\t\trd: right-down\r\n\r\n\t\t\tPercorre as posições que estão na diagonal de uma dada peça, alterando as\r\n\t\t\tposições com estado vazio para sob ataque.\r\n\t\t*/\r\n\r\n\t\tlet row_lu = row - 1, col_lu = col - 1;\r\n\t\tlet row_ld = row + 1, col_ld = col - 1;\r\n\t\tlet row_ru = row - 1, col_ru = col + 1;\r\n\t\tlet row_rd = row + 1, col_rd = col + 1;\r\n\r\n\r\n\t\twhile(row_lu >= 0 && col_lu >= 0){\r\n\t\t\tif(tempBoard[row_lu][col_lu] === 0)\r\n\t\t\t\ttempBoard[row_lu][col_lu] = 2;\r\n\r\n\t\t\trow_lu--;\r\n\t\t\tcol_lu--;\r\n\t\t}\r\n\r\n\r\n\t\twhile(row_ld <= 7 && col_ld >= 0){\r\n\t\t\tif(tempBoard[row_ld][col_ld] === 0)\r\n\t\t\t\ttempBoard[row_ld][col_ld] = 2;\r\n\r\n\t\t\trow_ld++;\r\n\t\t\tcol_ld--;\r\n\t\t}\r\n\r\n\r\n\t\twhile(row_ru >= 0 && col_ru <= 7){\r\n\t\t\tif(tempBoard[row_ru][col_ru] === 0)\r\n\t\t\t\ttempBoard[row_ru][col_ru] = 2;\r\n\r\n\t\t\trow_ru--;\r\n\t\t\tcol_ru++;\r\n\t\t}\r\n\r\n\r\n\t\twhile(row_rd <= 7 && col_rd <= 7){\r\n\t\t\tif(tempBoard[row_rd][col_rd] === 0)\r\n\t\t\t\ttempBoard[row_rd][col_rd] = 2;\r\n\r\n\t\t\trow_rd++;\r\n\t\t\tcol_rd++;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction updateBoardState(queenList: string[]){\r\n\t\t/*\r\n\t\t * Atualiza o estado atual do tabuleiro, marcando quais posições estão ocupadas por\r\n\t\t\t peças e quais posições estão sob ataque. \r\n\t\t */\r\n\r\n\t\t\r\n\t\tlet tempBoard = newBoard();\r\n\t\t\r\n\t\tqueenList.forEach(id => {\r\n\t\t\tconst [row, col] = getCoordinates(id);\r\n\r\n\t\t\ttempBoard[row][col] = 1; // Atualiza Tabuleiro onde a peça está.\r\n\r\n\t\t\tcolAttack(row, col, tempBoard);\r\n\t\t\trowAttack(row, col, tempBoard);\r\n\t\t\tdiagAttack(row, col, tempBoard);\r\n\r\n\t\t\t//setBoardState(tempBoard);\r\n\r\n\t\t\t//console.log(tempBoard);\r\n\t\t})\r\n\r\n\t\treturn tempBoard;\r\n\t}\r\n\r\n\tfunction adicionaPeça(id: string){\r\n\t\tupdateBoardUI(id, 'add');\r\n\r\n\t\tconst newQueenList = updateQueenList(id, 'add', queenList);\r\n\t\tsetQueenList(newQueenList);\r\n\r\n\t\tconst newBoard = updateBoardState(queenList);\r\n\t\tsetBoardState(newBoard);\r\n\r\n\r\n\t\tsetQueensLeft(queensLeft - 1);\r\n\t}\r\n\r\n\tfunction removePeça(id: string){\r\n\t\tupdateBoardUI(id, 'remove');\r\n\r\n\t\tconst newQueenList = updateQueenList(id, 'remove', queenList);\r\n\t\tsetQueenList(newQueenList);\r\n\r\n\t\tconst newBoard = updateBoardState(queenList);\r\n\t\tsetBoardState(newBoard);\r\n\r\n\t\tsetQueensLeft(queensLeft + 1);\r\n\r\n\t}\r\n\r\n\tfunction alerta(){\r\n\t\talert(\"Movimento Inválido! Essa posição pode ser atacada por alguma Rainha.\")\r\n\t}\r\n\r\n\t\r\n\r\n\r\n\tfunction play(id: string){\r\n\t\t/*\r\n\t\t * Essa função é responsável por realizar o processo de uma jogada,\r\n\t\t   Atualizando a interface e as variáveis responsáveis pelo funcionamento do jogo.\r\n\t\t*/\r\n\r\n\t\tconst state = getState(id, boardState);\r\n\r\n\t\tif(state === 0 && queensLeft > 0)\r\n\t\t\tadicionaPeça(id);\r\n\r\n\t\telse if(state === 1)\r\n\t\t\tremovePeça(id);\r\n\r\n\t\telse if(state === 2)\r\n\t\t\talerta();\r\n\t\t\r\n\r\n\t\tif(queensLeft === 0){\r\n\t\t\talert(\"Parabéns você conseguiu solucionar o problema das 8 rainhas!\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n  function newGame(){\r\n\t\t/*\r\n\t\t * Retorna todas as váriaveis para seus estados iniciais, e limpa todos os\r\n\t\t \t elementos visuais do tabuleiro.\r\n\t\t */\r\n\r\n\t\tconst board = newBoard();\r\n\t\tsetBoardState(board);\r\n\r\n\t\tqueenList.forEach(x => {\r\n\t\t\tdocument.getElementById(x)!.innerHTML = '';\r\n\t\t})\r\n\r\n\t\tsetQueenList([]);\r\n\t\tsetQueensLeft(8);\r\n\t\tcl();\r\n\t}\r\n  \r\n\r\n\tfunction red(){\r\n\t\t/*\r\n\t\t * Marca de Vermelho as posições ocupadas por peças e as posições sob ataque de\r\n\t\t\t alguma peça.\r\n\t\t*/\r\n\r\n\t\tlet state = 0;\r\n\t\tlet id = '';\r\n\r\n\t\tfor(let i = 1; i <= 64; i++){\r\n\t\t\tid = String(i);\r\n\t\t\tstate = getState(id, boardState);\r\n\r\n\t\t\tif(state !== 0){\r\n\t\t\t\tdocument.getElementById(id)!.style.backgroundColor = \"red\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n  function cl(){\r\n\t\t/**\r\n\t\t * Limpa os campos marcados por vermelho.\r\n\t\t */\r\n\r\n\t\tlet id = '';\r\n\r\n\t\tfor(let i = 1; i <= 64; i++){\r\n\t\t\tid = String(i);\r\n\t\t\tdocument.getElementById(id)!.style.backgroundColor = '';\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tfunction getEmptyPositions(board: number[][]){\r\n\t\t/**\r\n\t\t * Retorna o conjunto de posições que estão vazias e que não estão sob ataque de\r\n\t\t   nenhuma outra rainha.\r\n\t\t */\r\n\r\n\t\tlet emptyPositions = [];\r\n\t\t\r\n\t\tfor(let i = 1; i <= 64; i++){\r\n\t\t\tlet id = String(i);\r\n\r\n\t\t\tif(getState(id, board) === 0){\r\n\t\t\t\temptyPositions.push(id);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn emptyPositions;\r\n\t}\r\n\r\n\tfunction solve(queenList: string[], queensLeft: number): [number, string[], number[][]]{\r\n\t\t/**\r\n\t\t * Dado o Estado atual do Tabuleiro, o algoritmo busca uma solução para o problema.\r\n\t\t */\r\n\t\t\r\n\r\n\t\t/**\r\n\t\t * Copia a lista de posições das rainhas e a quantidade restante de rainhas a serem\r\n\t\t   jogadas.\r\n\r\n\t\t * Cria um tabuleiro com o estado atual do jogo, e determina as posições vazias.\t \r\n\t\t */\r\n\t\tlet currentQueenList = [...queenList]; // O spread operator é utilizado para criar uma copia por valor, e não por referência, do aray.\r\n\t\tlet currentQueensLeft = queensLeft;\r\n\t\tlet board = updateBoardState(currentQueenList); \r\n\t\tlet emptyPositions = getEmptyPositions(board);\r\n\r\n\r\n\t\twhile(emptyPositions.length > 0){\r\n\t\t\t// Extrai o id de uma posição.\r\n\t\t\tlet id = emptyPositions.pop();\r\n\t\t\t\r\n\t\t\tif(id){\r\n\t\t\t\t//Joga a peça\r\n\t\t\t\tlet newQueenList = updateQueenList(id, 'add', currentQueenList);\r\n\t\t\t\tlet newBoard     = updateBoardState(newQueenList);\r\n\t\t\t\tlet newQueensLeft = currentQueensLeft - 1;\r\n\r\n\r\n\t\t\t\tif(newQueensLeft === 0){\r\n\t\t\t\t\treturn [1, newQueenList, newBoard];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconst result = solve(newQueenList, newQueensLeft);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(result[0] === 1) return result;\r\n\t\t\t\t\t\r\n\t\t\t\t\tnewQueenList = updateQueenList(id, 'remove', newQueenList);\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(currentQueensLeft > 0){\r\n\t\t\treturn [0, currentQueenList, board];\r\n\t\t}\r\n\r\n\t\treturn [0, [], [[]]];\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      \r\n      <div className=\"ui\">\r\n        <span>Peças Restantes: {queensLeft}</span>\r\n        \r\n        <button className=\"new-game\" onClick={() => newGame()}>Novo Jogo</button>\r\n        <button className=\"solve\" onClick={async () => {\r\n\t\t\t\t\tlet j = solve(queenList, queensLeft)\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(j[0] === 1){\r\n\t\t\t\t\t\tnewGame();\r\n\t\t\t\t\t\tupdateBoardState(j[1]);\r\n\t\t\t\t\t\tfor(let i = 0; i < 8; i++){\r\n\t\t\t\t\t\t\tplay(j[1][i]);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tsetQueensLeft(0);\r\n\t\t\t\t\t\tsetBoardState(j[2]);\r\n\t\t\t\t\t\talert(\"Uma Solução foi encontrada!\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(j[0] === 0){\r\n\t\t\t\t\t\talert(\"Dado o estado atual do jogo, não foi possível encontrar uma solução!\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t}}>Solucionar Jogo</button>\r\n        <button className=\"solve\" onClick={() => red()}>VERMELHO</button>\r\n        <button className=\"solve\" onClick={() => cl()}>CLEAR</button>\r\n\t\t  </div>  \r\n\r\n      <div className=\"content\">\r\n        <div className=\"board\">\r\n          <div className=\"pos\" id=\"1\" onClick={() => play(\"1\")}></div>\r\n          <div className=\"pos\" id=\"2\" onClick={() => play(\"2\")}></div>\r\n          <div className=\"pos\" id=\"3\" onClick={() => play(\"3\")}></div>\r\n          <div className=\"pos\" id=\"4\" onClick={() => play(\"4\")}></div>\r\n          <div className=\"pos\" id=\"5\" onClick={() => play(\"5\")}></div>\r\n          <div className=\"pos\" id=\"6\" onClick={() => play(\"6\")}></div>\r\n          <div className=\"pos\" id=\"7\" onClick={() => play(\"7\")}></div>\r\n          <div className=\"pos\" id=\"8\" onClick={() => play(\"8\")}></div>\r\n\r\n          <div className=\"pos\" id=\"9\" onClick={() => play(\"9\")}></div>\r\n          <div className=\"pos\" id=\"10\" onClick={() => play(\"10\")}></div>\r\n          <div className=\"pos\" id=\"11\" onClick={() => play(\"11\")}></div>\r\n          <div className=\"pos\" id=\"12\" onClick={() => play(\"12\")}></div>\r\n          <div className=\"pos\" id=\"13\" onClick={() => play(\"13\")}></div>\r\n          <div className=\"pos\" id=\"14\" onClick={() => play(\"14\")}></div>\r\n          <div className=\"pos\" id=\"15\" onClick={() => play(\"15\")}></div>\r\n          <div className=\"pos\" id=\"16\" onClick={() => play(\"16\")}></div>\r\n\r\n          <div className=\"pos\" id=\"17\" onClick={() => play(\"17\")}></div>\r\n          <div className=\"pos\" id=\"18\" onClick={() => play(\"18\")}></div>\r\n          <div className=\"pos\" id=\"19\" onClick={() => play(\"19\")}></div>\r\n          <div className=\"pos\" id=\"20\" onClick={() => play(\"20\")}></div>\r\n          <div className=\"pos\" id=\"21\" onClick={() => play(\"21\")}></div>\r\n          <div className=\"pos\" id=\"22\" onClick={() => play(\"22\")}></div>\r\n          <div className=\"pos\" id=\"23\" onClick={() => play(\"23\")}></div>\r\n          <div className=\"pos\" id=\"24\" onClick={() => play(\"24\")}></div>\r\n\r\n          <div className=\"pos\" id=\"25\" onClick={() => play(\"25\")}></div>\r\n          <div className=\"pos\" id=\"26\" onClick={() => play(\"26\")}></div>\r\n          <div className=\"pos\" id=\"27\" onClick={() => play(\"27\")}></div>\r\n          <div className=\"pos\" id=\"28\" onClick={() => play(\"28\")}></div>\r\n          <div className=\"pos\" id=\"29\" onClick={() => play(\"29\")}></div>\r\n          <div className=\"pos\" id=\"30\" onClick={() => play(\"30\")}></div>\r\n          <div className=\"pos\" id=\"31\" onClick={() => play(\"31\")}></div>\r\n          <div className=\"pos\" id=\"32\" onClick={() => play(\"32\")}></div>\r\n\r\n          <div className=\"pos\" id=\"33\" onClick={() => play(\"33\")}></div>\r\n          <div className=\"pos\" id=\"34\" onClick={() => play(\"34\")}></div>\r\n          <div className=\"pos\" id=\"35\" onClick={() => play(\"35\")}></div>\r\n          <div className=\"pos\" id=\"36\" onClick={() => play(\"36\")}></div>\r\n          <div className=\"pos\" id=\"37\" onClick={() => play(\"37\")}></div>\r\n          <div className=\"pos\" id=\"38\" onClick={() => play(\"38\")}></div>\r\n          <div className=\"pos\" id=\"39\" onClick={() => play(\"39\")}></div>\r\n          <div className=\"pos\" id=\"40\" onClick={() => play(\"40\")}></div>\r\n\r\n          <div className=\"pos\" id=\"41\" onClick={() => play(\"41\")}></div>\r\n          <div className=\"pos\" id=\"42\" onClick={() => play(\"42\")}></div>\r\n          <div className=\"pos\" id=\"43\" onClick={() => play(\"43\")}></div>\r\n          <div className=\"pos\" id=\"44\" onClick={() => play(\"44\")}></div>\r\n          <div className=\"pos\" id=\"45\" onClick={() => play(\"45\")}></div>\r\n          <div className=\"pos\" id=\"46\" onClick={() => play(\"46\")}></div>\r\n          <div className=\"pos\" id=\"47\" onClick={() => play(\"47\")}></div>\r\n          <div className=\"pos\" id=\"48\" onClick={() => play(\"48\")}></div>\r\n\r\n          <div className=\"pos\" id=\"49\" onClick={() => play(\"49\")}></div>\r\n          <div className=\"pos\" id=\"50\" onClick={() => play(\"50\")}></div>\r\n          <div className=\"pos\" id=\"51\" onClick={() => play(\"51\")}></div>\r\n          <div className=\"pos\" id=\"52\" onClick={() => play(\"52\")}></div>\r\n          <div className=\"pos\" id=\"53\" onClick={() => play(\"53\")}></div>\r\n          <div className=\"pos\" id=\"54\" onClick={() => play(\"54\")}></div>\r\n          <div className=\"pos\" id=\"55\" onClick={() => play(\"55\")}></div>\r\n          <div className=\"pos\" id=\"56\" onClick={() => play(\"56\")}></div>\r\n\r\n          <div className=\"pos\" id=\"57\" onClick={() => play(\"57\")}></div>\r\n          <div className=\"pos\" id=\"58\" onClick={() => play(\"58\")}></div>\r\n          <div className=\"pos\" id=\"59\" onClick={() => play(\"59\")}></div>\r\n          <div className=\"pos\" id=\"60\" onClick={() => play(\"60\")}></div>\r\n          <div className=\"pos\" id=\"61\" onClick={() => play(\"61\")}></div>\r\n          <div className=\"pos\" id=\"62\" onClick={() => play(\"62\")}></div>\r\n          <div className=\"pos\" id=\"63\" onClick={() => play(\"63\")}></div>\r\n          <div className=\"pos\" id=\"64\" onClick={() => play(\"64\")}></div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}